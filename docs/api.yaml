openapi: 3.0.3
info:
  title: Pulsate API Documentation
  description: Pulsate API Documentation
  version: 0.1.0
servers:
  - url: 'http://localhost:3000'
paths:
  /api/v0/login:
    post:
      tags:
        - auth
      summary:  ログインします。
      description: ログインして認証トークンを作成します。
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: |
            `ACCOUNT_NOT_FOUND`: account_name というアカウントは登録されていない\
            `INVALID_PASSPHRASE`: passphrase が不正\
            `YOU_ARE_BOT`: captcha_token の検証に失敗\
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v0/refresh:
    post:
      tags:
        - auth
      summary: 更新トークンで認証トークンを再発行します。
      description: |
        処理の流れ:
        1. 更新トークンを検証します。
        2. 認証トークンを作成します。
        3. 1 の検証結果が失敗していれば、エラー終了します。このタイミングで判定するのは、処理時間によるタイミング攻撃を防ぐためです。
      operationId: refresh
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh_token:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshResponse'
        '400':
          description: |
            `INVALID_TOKEN`:  更新トークンが不正\
            `EXPIRED_TOKEN`:  トークンが期限切れ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v0/accounts:
    post:
      tags:
        - accounts
      summary: 新規アカウントを作成します。
      description: |
        新規アカウントを作成します。正確には登録中の状態のアカウントを作成し、アカウント登録スキームを開始します。
      operationId: createAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefreshResponse"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAccountResponse"
        "400":
          description: |
            Bad Request\
            `ACCOUNT_NAME_IN_USE`: アカウント名が既に使用されている\
            `MAIL_ADDRESS_IN_USE`: メールアドレスが既に使用されている\
            `YOU_ARE_BOT`: captcha_token の検証に失敗



  /api/v0/accounts/{account_name}:
    patch:
      summary: アカウント情報を更新します
      tags:
        - accounts
      operationId: updateAccount
      description: |
        アカウント情報を指定のパラメータで編集します。入力の body から次の情報のいずれか 1 つ以上を受け付け、それらを同時に適用できるかを検証し、反映します。\
        競合を防ぐために「更新前のニックネームと更新前のメールアドレスを結合した文字列」のハッシュを [ETag (Entity Tag)](https://developer.mozilla.org/ja/docs/Web/HTTP/Headers/ETag) として用います。これが一致しないときは 412 Precondition Failed のエラーとなります。\
        メールアドレスを更新した場合はそのメールアドレスの確認スキームが開始されます。そしてそのメールアドレスが確認されるまで、メールアドレスの更新処理は遅延されます。ニックネームを同時に更新した場合、ニックネームの更新は先に反映されます。
      parameters:
        - name: account_name
          in: path
          required: true
          schema:
            type: string
          description: アカウント名
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateAccountRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateAccountResponse"
        "202":
          description: メールアドレスの変更があった場合
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateAccountMailResponse"
        "400":
          description: |
            `ACCOUNT_NOT_FOUND`: 名前が`account_name`のアカウントが見つからない\
            `INVALID_SEQUENCE`: パラメータ内に使用不可能な文字種を含んでいる\
            `VULNERABLE_PASSPHRASE`: 新しいパスフレーズがパスフレーズとしての要件を満たさない
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "412":
          description: Precondition Failed

  /api/v0/acocunts/{account_name}/freeze:
    put:
      summary: アカウントを凍結します
      tags:
        - accounts
      parameters:
        - name: account_name
          in: path
          required: true
          schema:
            type: string
          description: アカウント名
      description: |
        アカウントを凍結します。モデレーター以上の権限を持つアカウントの認証情報が必要です。
      responses:
        "200":
          description: OK
          content:
            application/json:
        "400":
         description: |
           `ACCOUNT_NOT_FOUND`: 名前が`account_name`のアカウントが見つからない
        "401":
          description: Unauthorized
    delete:
      summary: アカウントを凍結解除します
      tags:
        - accounts
      description: |
        アカウントを凍結解除します。モデレーター以上の権限を持つアカウントの認証情報が必要です。
      responses:
        "200":
          description: OK
          content:
            application/json:
        "400":
          description: |
            `ACCOUNT_NOT_FOUND`: 名前が`account_name`のアカウントが見つからない
        "401":
          description: Unauthorized

  /api/v0/accounts/{account_name}/resend_verify_state:
    post:
      summary: アカウントのメールアドレスを検証するコードを再送信します
      tags:
        - accounts
      parameters:
        - name: account_name
          in: path
          required: true
          schema:
            type: string
          description: アカウント名
      responses:
        "200":
          description: OK
          content:
            application/json:
        "400":
          description: |
            `ACCOUNT_NOT_REGISTERING`: そのアカウント名のアカウントが登録中でない

  /api/v0/accounts/{account_name}/verify_mail_address:
    post:
      summary: メールアドレスの検証を行います
      tags:
        - accounts
      parameters:
        - name: account_name
          in: path
          required: true
          schema:
            type: string
          description: アカウント名
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerifyAccountRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
        "400":
          description:  |
            `ACCOUNT_NOT_REGISTERING`: そのアカウント名のアカウントが登録中でない\\
            `INVALID_STATE`: state が一致しない




components:
  schemas:
    LoginRequest:
      type: object
      properties:
        account_name:
          type: string
        passphrase:
          type: string
        captcha_token:
          type: string

    LoginResponse:
        type: object
        properties:
            authorization_token:
                type: string
            refresh_token:
                type: string
            expires_in:
                type: integer

    RefreshRequest:
      type: object
      properties:
        refresh_token:
          type: string

    RefreshResponse:
      type: object
      properties:
        authorization_token:
          type: string

    CreateAccountRequest:
      type: object
      properties:
        account_name:
          type: string
        mail_address:
          type: string
        passphrase:
          type: string
        captcha_token:
          type: string

    CreateAccountResponse:
      type: object
      properties:

    UpdateAccountRequest:
      type: object
      properties:
        nickname:
          type: string
        mail:
          type: string
        passphrase:
          type: string

    UpdateAccountResponse:
      type: object
      properties:
        nickname:
          type: string
        mail:
          type: string

    UpdateAccountMailResponse:
      type: object
      properties:
        nickname:
          type: string
        mail:
          type: string

    VerifyAccountRequest:
      type: object
      properties:
        state:
          type: string

    ErrorResponse:
        type: object
        properties:
            type:
                type: string
