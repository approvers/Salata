name: Staging Terraform Apply

on:
  push:
    branches:
      - "main"

env:
  GKE_CLUSTER: pulsate-gke-cluster
  GKE_ZONE: asia-northeast1-a

jobs:
  list_dockerfile:
    runs-on: ubuntu-latest
    steps:
      - uses: "actions/checkout@v4"
      - uses: "./.github/actions/list_dockerfile"
        id: set_matrix
    outputs:
      matrix: ${{ steps.set_matrix.outputs.matrix }}
  images:
    needs: list_dockerfile
    name: Push Docker images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      packages: write
    strategy:
        matrix:
          dockerfile: ${{ fromJson(needs.list_dockerfile.outputs.matrix) }}

    steps:
      - uses: "actions/checkout@v4"

      - name: Get context directory of Dockerfile
        id: dockerfile-context
        run: |
          echo "context=$(dirname '${{ matrix.dockerfile }}')" >> $GITHUB_OUTPUT
      - name: Get microservice name
        id: microservice-name
        run: |
          echo "service-name=$(basename '${{ steps.dockerfile-context.outputs.context }}')" >> $GITHUB_OUTPUT

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/approvers/pulsate/${{ steps.microservice-name.outputs.service-name }}
          tags: |
            ${{ github.sha }}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          context: ${{ steps.dockerfile-context.outputs.context }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - id: "auth"
        name: Authenticate to Google Cloud
        uses: "google-github-actions/auth@v1"
        with:
          workload_identity_provider: "projects/1065320521129/locations/global/workloadIdentityPools/github/providers/github-provider"
          service_account: "github-actions@pulsate-staging-400117.iam.gserviceaccount.com"

      - uses: "google-github-actions/setup-gcloud@v1"
        with:
          version: ">= 363.0.0"

      - name: Configure Docker to use gcloud as a credential helper
        run: |
          gcloud --quiet auth configure-docker

      - uses: "google-github-actions/get-gke-credentials@v1"
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}

      - uses: "syntaqx/setup-kustomize@v1"
        with:
          kustomize-version: "5.1.1"

      - name: Deploy to the GKE cluster
        run: |
          kustomize edit set image ${{ steps.microservice-name.outputs.service-name }}=ghcr.io/approvers/pulsate/${{ steps.microservice-name.outputs.service-name }}:$GITHUB_SHA
          kustomize build . | kubectl apply -f -
          kubectl rollout status deployment/staging
          kubectl get services -o wide

